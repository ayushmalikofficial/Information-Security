#include<iostream>
#include<conio.h>
using namespace std;
int Xor(int x,int y)
{
 if(x==y)
 return 0;
 return 1;
}
void compose(int right3[32],int index,int value)
{
   int i,k;
   k=index*4;
   for(i=k+3;i>=k;i--)
   {
    right3[i]=value%2;
    value=value/2;

   }
}
//........................DES.............................
//........................................................



//...................P_BOX.................................
void p_box(int right3[32])
{
int i;
int temp[32];
int t_28[32];
t_28[0]=9;
t_28[1]=17;
t_28[2]=23;
t_28[3]=31;
t_28[4]=13;
t_28[5]=28;
t_28[6]=2;
t_28[7]=18;
t_28[8]=24;
t_28[9]=16;
t_28[10]=30;
t_28[11]=6;
t_28[12]=26;
t_28[13]=20;
t_28[14]=10;
t_28[15]=1;
t_28[16]=8;
t_28[17]=14;
t_28[18]=25;
t_28[19]=3;
t_28[20]=4;
t_28[21]=29;
t_28[22]=11;
t_28[23]=19;
t_28[24]=32;
t_28[25]=12;
t_28[26]=22;
t_28[27]=7;
t_28[28]=5;
t_28[29]=27;
t_28[30]=15;
t_28[31]=21;

for( i=0;i<32;i++)
{
temp[t_28[i]-1]=right3[i];
}

for( i=0;i<32;i++)
{
right3[i]=temp[i];
}

}

//...........................S_BOXES.......................

void s_box(int right2[48],int right3[32])
{
int i,k;
int s[8][4][16];

s[0][0][0]=14;
s[0][0][1]=4 ;
s[0][0][2]=13;
s[0][0][3]=1 ;
s[0][0][4]=2 ;
s[0][0][5]=15;
s[0][0][6]=11;
s[0][0][7]=8 ;
s[0][0][8]=3 ;
s[0][0][9]=10;
s[0][0][10]=6 ;
s[0][0][11]=12;
s[0][0][12]= 5;
s[0][0][13]= 9;
s[0][0][14]= 0;
s[0][0][15]= 7;

s[0][1][0]=0;
s[0][1][1]=15;
s[0][1][2]=7;
s[0][1][3]=4;
s[0][1][4]=14;
s[0][1][5]=2;
s[0][1][6]=13;
s[0][1][7]=1;
s[0][1][8]=10 ;
s[0][1][9]=6;
s[0][1][10]=12;
s[0][1][11]=11;
s[0][1][12]=9;
s[0][1][13]=5;
s[0][1][14]=3;
s[0][1][15]=8;


s[0][2][0]= 4;
s[0][2][1]= 1;
s[0][2][2]= 14;
s[0][2][3]= 8;
s[0][2][4]= 13;
s[0][2][5]= 6;
s[0][2][6]= 2;
s[0][2][7]= 11;
s[0][2][8]=15;
s[0][2][9]=12;
s[0][2][10]=9;
s[0][2][11]=7;
s[0][2][12]=3;
s[0][2][13]= 10;
s[0][2][14]= 5;
s[0][2][15]= 0;



s[0][3][0]=15;
s[0][3][1]= 12;
s[0][3][2]=8;
s[0][3][3]=2;
s[0][3][4]=4;
s[0][3][5]=9;
s[0][3][6]=1;
s[0][3][7]=7;
s[0][3][8]=5;
s[0][3][9]=11;
s[0][3][10]=3;
s[0][3][11]=14;
s[0][3][12]=10 ;
s[0][3][13]=0;
s[0][3][14]=6;
s[0][3][15]=13 ;







s[1][0][0]=15  ;
s[1][0][1]=1  ;
s[1][0][2]= 8 ;
s[1][0][3]= 14 ;
s[1][0][4]=  6;
s[1][0][5]= 11 ;
s[1][0][6]= 3 ;
s[1][0][7]= 4 ;
s[1][0][8]= 9 ;
s[1][0][9]= 7 ;
s[1][0][10]= 2 ;
s[1][0][11]= 13 ;
s[1][0][12]=  12;
s[1][0][13]=  0;
s[1][0][14]= 5 ;
s[1][0][15]= 10 ;

s[1][1][0]=3  ;
s[1][1][1]=13  ;
s[1][1][2]= 4 ;
s[1][1][3]= 7 ;
s[1][1][4]= 15 ;
s[1][1][5]=  2;
s[1][1][6]= 8 ;
s[1][1][7]= 14 ;
s[1][1][8]=  12;
s[1][1][9]=  0;
s[1][1][10]= 1 ;
s[1][1][11]= 10 ;
s[1][1][12]=  6;
s[1][1][13]=  9;
s[1][1][14]=  11;
s[1][1][15]=  5;


s[1][2][0]=0 ;
s[1][2][1]= 14 ;
s[1][2][2]= 7 ;
s[1][2][3]= 11 ;
s[1][2][4]= 10;
s[1][2][5]= 4;
s[1][2][6]= 13 ;
s[1][2][7]= 1;
s[1][2][8]= 5;
s[1][2][9]= 8;
s[1][2][10]= 12 ;
s[1][2][11]= 6;
s[1][2][12]= 9;
s[1][2][13]= 3;
s[1][2][14]= 2;
s[1][2][15]=  15;



s[1][3][0]=13  ;
s[1][3][1]=8  ;
s[1][3][2]=10  ;
s[1][3][3]= 1 ;
s[1][3][4]= 3 ;
s[1][3][5]= 15 ;
s[1][3][6]= 4 ;
s[1][3][7]= 2 ;
s[1][3][8]= 11 ;
s[1][3][9]=  6;
s[1][3][10]= 7 ;
s[1][3][11]= 12 ;
s[1][3][12]=  0;
s[1][3][13]=  5;
s[1][3][14]=  14;
s[1][3][15]=  9;







s[2][0][0]=10  ;
s[2][0][1]= 0 ;
s[2][0][2]= 9 ;
s[2][0][3]= 14 ;
s[2][0][4]=  6;
s[2][0][5]= 3 ;
s[2][0][6]=15  ;
s[2][0][7]= 5 ;
s[2][0][8]=  1;
s[2][0][9]=  13;
s[2][0][10]=  12;
s[2][0][11]=  7;
s[2][0][12]=  11;
s[2][0][13]=  4;
s[2][0][14]=  2;
s[2][0][15]=  8;

s[2][1][0]=13  ;
s[2][1][1]= 7 ;
s[2][1][2]= 0 ;
s[2][1][3]= 9 ;
s[2][1][4]= 3 ;
s[2][1][5]= 4 ;
s[2][1][6]= 6 ;
s[2][1][7]= 10 ;
s[2][1][8]=  2;
s[2][1][9]=  8;
s[2][1][10]= 5 ;
s[2][1][11]= 14 ;
s[2][1][12]=  12;
s[2][1][13]=  11;
s[2][1][14]=  15;
s[2][1][15]=  1;


s[2][2][0]=13  ;
s[2][2][1]= 6 ;
s[2][2][2]= 4 ;
s[2][2][3]= 9 ;
s[2][2][4]= 8 ;
s[2][2][5]= 15 ;
s[2][2][6]=  3;
s[2][2][7]=  0;
s[2][2][8]=  11;
s[2][2][9]=  1;
s[2][2][10]= 2 ;
s[2][2][11]= 12 ;
s[2][2][12]=  5;
s[2][2][13]=  10;
s[2][2][14]=  14;
s[2][2][15]=  7;



s[2][3][0]=1  ;
s[2][3][1]=10  ;
s[2][3][2]= 13 ;
s[2][3][3]=  0;
s[2][3][4]=  6;
s[2][3][5]=  9;
s[2][3][6]=  8;
s[2][3][7]=  7;
s[2][3][8]=  4;
s[2][3][9]=  15;
s[2][3][10]=  14;
s[2][3][11]=  3;
s[2][3][12]=  11;
s[2][3][13]=  5;
s[2][3][14]=  2;
s[2][3][15]=  12;








s[3][0][0]= 7 ;
s[3][0][1]= 13 ;
s[3][0][2]=  14;
s[3][0][3]=  3;
s[3][0][4]=  0;
s[3][0][5]=  6;
s[3][0][6]=  9;
s[3][0][7]=  10;
s[3][0][8]=  1;
s[3][0][9]=  2;
s[3][0][10]= 8 ;
s[3][0][11]= 5 ;
s[3][0][12]= 11 ;
s[3][0][13]=  12;
s[3][0][14]=  4;
s[3][0][15]=  15;

s[3][1][0]=13  ;
s[3][1][1]= 8 ;
s[3][1][2]= 11 ;
s[3][1][3]=  5;
s[3][1][4]=  6;
s[3][1][5]=  15;
s[3][1][6]=  0;
s[3][1][7]=  3;
s[3][1][8]=  4;
s[3][1][9]=  7;
s[3][1][10]= 2 ;
s[3][1][11]= 12 ;
s[3][1][12]=  1;
s[3][1][13]=  10;
s[3][1][14]=  14;
s[3][1][15]=  9;


s[3][2][0]=10  ;
s[3][2][1]= 6 ;
s[3][2][2]= 9 ;
s[3][2][3]= 0 ;
s[3][2][4]= 12 ;
s[3][2][5]=  11;
s[3][2][6]=  7;
s[3][2][7]=  13;
s[3][2][8]=  15;
s[3][2][9]=  1;
s[3][2][10]= 3 ;
s[3][2][11]= 14 ;
s[3][2][12]=  5;
s[3][2][13]=  2;
s[3][2][14]=  8;
s[3][2][15]=  4;



s[3][3][0]=3  ;
s[3][3][1]=15  ;
s[3][3][2]= 0 ;
s[3][3][3]= 6 ;
s[3][3][4]= 10 ;
s[3][3][5]=  1;
s[3][3][6]=  13;
s[3][3][7]=  8;
s[3][3][8]=  9;
s[3][3][9]=  4;
s[3][3][10]= 5 ;
s[3][3][11]=  11;
s[3][3][12]=  12;
s[3][3][13]=  7;
s[3][3][14]=  2;
s[3][3][15]=  14;








s[4][0][0]=2  ;
s[4][0][1]=12 ;
s[4][0][2]= 4 ;
s[4][0][3]= 1 ;
s[4][0][4]= 7 ;
s[4][0][5]= 10 ;
s[4][0][6]=  11;
s[4][0][7]=  6;
s[4][0][8]=  8;
s[4][0][9]=  5;
s[4][0][10]= 3 ;
s[4][0][11]= 15 ;
s[4][0][12]=  13;
s[4][0][13]=  0;
s[4][0][14]=  14;
s[4][0][15]=  9;

s[4][1][0]=14  ;
s[4][1][1]= 11 ;
s[4][1][2]= 2 ;
s[4][1][3]= 12 ;
s[4][1][4]=  4;
s[4][1][5]=  7;
s[4][1][6]=  13;
s[4][1][7]=  1;
s[4][1][8]=  5;
s[4][1][9]=  0;
s[4][1][10]= 15 ;
s[4][1][11]=  10;
s[4][1][12]=  3;
s[4][1][13]=  9;
s[4][1][14]=  8;
s[4][1][15]=  6;


s[4][2][0]= 4 ;
s[4][2][1]= 2 ;
s[4][2][2]= 1 ;
s[4][2][3]= 11 ;
s[4][2][4]=  10;
s[4][2][5]=  13;
s[4][2][6]=  7;
s[4][2][7]=  8;
s[4][2][8]=  15;
s[4][2][9]=  9;
s[4][2][10]= 12 ;
s[4][2][11]=  5;
s[4][2][12]=  6;
s[4][2][13]=  3;
s[4][2][14]=  0;
s[4][2][15]=  14;



s[4][3][0]= 11 ;
s[4][3][1]=  8;
s[4][3][2]=  12;
s[4][3][3]=  7;
s[4][3][4]=  1;
s[4][3][5]=  14;
s[4][3][6]=  2;
s[4][3][7]=  13;
s[4][3][8]=  6;
s[4][3][9]=  15;
s[4][3][10]=  0;
s[4][3][11]=  9;
s[4][3][12]=  10;
s[4][3][13]=  4;
s[4][3][14]=  5;
s[4][3][15]=  3;







s[5][0][0]= 12 ;
s[5][0][1]=  1;
s[5][0][2]=  10;
s[5][0][3]=  15;
s[5][0][4]=  9;
s[5][0][5]=  2;
s[5][0][6]=  6;
s[5][0][7]=  8;
s[5][0][8]=  0;
s[5][0][9]=  13;
s[5][0][10]=  3;
s[5][0][11]=  4;
s[5][0][12]=  14;
s[5][0][13]=  7;
s[5][0][14]=  5;
s[5][0][15]=  11;

s[5][1][0]=10  ;
s[5][1][1]= 15 ;
s[5][1][2]=  4;
s[5][1][3]=  2;
s[5][1][4]=  7;
s[5][1][5]=  12;
s[5][1][6]=  9;
s[5][1][7]=  5;
s[5][1][8]=  6;
s[5][1][9]=  1;
s[5][1][10]= 13 ;
s[5][1][11]=  14;
s[5][1][12]=  0;
s[5][1][13]=  11;
s[5][1][14]=  3;
s[5][1][15]=  8;


s[5][2][0]= 9 ;
s[5][2][1]= 14 ;
s[5][2][2]=  15;
s[5][2][3]=  5;
s[5][2][4]=  2;
s[5][2][5]=  8;
s[5][2][6]=  12;
s[5][2][7]=  3;
s[5][2][8]=  7;
s[5][2][9]=  0;
s[5][2][10]= 4 ;
s[5][2][11]=  10;
s[5][2][12]=  1;
s[5][2][13]=  13;
s[5][2][14]=  11;
s[5][2][15]=  6;



s[5][3][0]= 4 ;
s[5][3][1]= 3;
s[5][3][2]= 2 ;
s[5][3][3]= 12 ;
s[5][3][4]=  9;
s[5][3][5]=  5;
s[5][3][6]=  15;
s[5][3][7]=  10;
s[5][3][8]=  11;
s[5][3][9]=  14;
s[5][3][10]= 1;
s[5][3][11]= 7;
s[5][3][12]= 6 ;
s[5][3][13]= 0 ;
s[5][3][14]= 8 ;
s[5][3][15]= 13;






s[6][0][0]=4  ;
s[6][0][1]= 11 ;
s[6][0][2]= 2 ;
s[6][0][3]= 14 ;
s[6][0][4]=  15;
s[6][0][5]=  0;
s[6][0][6]=  8;
s[6][0][7]=  13;
s[6][0][8]=  3;
s[6][0][9]=  12;
s[6][0][10]=  9;
s[6][0][11]=  7;
s[6][0][12]=  5;
s[6][0][13]=  10;
s[6][0][14]=  6;
s[6][0][15]=  1;

s[6][1][0]= 13 ;
s[6][1][1]=  0;
s[6][1][2]=  11;
s[6][1][3]=  7;
s[6][1][4]=  4;
s[6][1][5]=  9;
s[6][1][6]=  1;
s[6][1][7]=  10;
s[6][1][8]=  14;
s[6][1][9]=  3;
s[6][1][10]= 5 ;
s[6][1][11]= 12 ;
s[6][1][12]=  2;
s[6][1][13]=  15;
s[6][1][14]=  8;
s[6][1][15]=  6;


s[6][2][0]= 1 ;
s[6][2][1]= 4 ;
s[6][2][2]= 11 ;
s[6][2][3]=  13;
s[6][2][4]=  12;
s[6][2][5]=  3;
s[6][2][6]=  7;
s[6][2][7]=  14;
s[6][2][8]=  10;
s[6][2][9]=  15;
s[6][2][10]=  6;
s[6][2][11]=  8;
s[6][2][12]=  0;
s[6][2][13]=  5;
s[6][2][14]=  9;
s[6][2][15]=  2;



s[6][3][0]= 6 ;
s[6][3][1]= 11 ;
s[6][3][2]=  13;
s[6][3][3]=  8;
s[6][3][4]=  1;
s[6][3][5]=  4;
s[6][3][6]=  10;
s[6][3][7]=  7;
s[6][3][8]=  9;
s[6][3][9]=  5;
s[6][3][10]= 0 ;
s[6][3][11]= 15 ;
s[6][3][12]=  14;
s[6][3][13]=  2;
s[6][3][14]=  3;
s[6][3][15]=  12;




s[7][0][0]= 13 ;
s[7][0][1]= 2 ;
s[7][0][2]= 8 ;
s[7][0][3]= 4 ;
s[7][0][4]= 6 ;
s[7][0][5]= 15 ;
s[7][0][6]=  11;
s[7][0][7]=  1;
s[7][0][8]=  10;
s[7][0][9]=  9;
s[7][0][10]=  3;
s[7][0][11]= 14 ;
s[7][0][12]= 5 ;
s[7][0][13]=  0;
s[7][0][14]= 12 ;
s[7][0][15]=  7;


s[7][1][0]= 1 ;
s[7][1][1]= 15 ;
s[7][1][2]=  13;
s[7][1][3]=  8;
s[7][1][4]=  10;
s[7][1][5]=  3;
s[7][1][6]=  7;
s[7][1][7]=  4;
s[7][1][8]=  12;
s[7][1][9]=  5;
s[7][1][10]= 6 ;
s[7][1][11]= 11 ;
s[7][1][12]=  0;
s[7][1][13]=  14;
s[7][1][14]=  9;
s[7][1][15]=  2;


s[7][2][0]= 7 ;
s[7][2][1]= 11 ;
s[7][2][2]=  4;
s[7][2][3]=  1;
s[7][2][4]=  9;
s[7][2][5]=  12;
s[7][2][6]=  14;
s[7][2][7]=  2;
s[7][2][8]=  0;
s[7][2][9]=  6;
s[7][2][10]= 10 ;
s[7][2][11]=  13;
s[7][2][12]=  15;
s[7][2][13]=  3;
s[7][2][14]=  5;
s[7][2][15]=  8;



s[7][3][0]= 2 ;
s[7][3][1]= 1 ;
s[7][3][2]= 14 ;
s[7][3][3]=  7;
s[7][3][4]=  4;
s[7][3][5]=  10;
s[7][3][6]=  8;
s[7][3][7]=  13;
s[7][3][8]=  15;
s[7][3][9]=  12;
s[7][3][10]=  9;
s[7][3][11]=  0;
s[7][3][12]=  3;
s[7][3][13]=  5;
s[7][3][14]=  6;
s[7][3][15]=  11;



int t[8][6];
for(k=0,i=0;i<8;i++)
{
  for(int j=0;j<6;j++,k++)
   {  
    t[i][j]=right2[k];
    }    
    
}


for(i=0;i<7;i++)
{

int r,value,c;
r=2*t[i][0]+t[i][5];

c=8*t[i][1]+4*t[i][2]+2*t[i][3]+t[i][4];


value=s[i][r][c];

compose(right3,i,value);

}






 }










//.......................FINAL PERMUATION...................

void final_permutation(int input[64])
{


int t_210[64];
t_210[0]=58;
t_210[1]=50;
t_210[2]=42;
t_210[3]=34;
t_210[4]=26;
t_210[5]=18;
t_210[6]=10;
t_210[7]=2;
t_210[8]=60;
t_210[9]=52;
t_210[10]=44;
t_210[11]=36;
t_210[12]=28;
t_210[13]=20;
t_210[14]=12;
t_210[15]=4;
t_210[16]=62;
t_210[17]=54;
t_210[18]=46;
t_210[19]=38;
t_210[20]=30;
t_210[21]=22;
t_210[22]=14;
t_210[23]=6;
t_210[24]=64;
t_210[25]=56;
t_210[26]=48;
t_210[27]=40;
t_210[28]=32;
t_210[29]=24;
t_210[30]=16;
t_210[31]=8;
t_210[32]=57;
t_210[33]=49;
t_210[34]=41;
t_210[35]=33;
t_210[36]=25;
t_210[37]=17;
t_210[38]=9;
t_210[39]=1;
t_210[40]=59;
t_210[41]=51;
t_210[42]=43;
t_210[43]=35;
t_210[44]=27;
t_210[45]=19;
t_210[46]=11;
t_210[47]=3;
t_210[48]=61;
t_210[49]=53;
t_210[50]=45;
t_210[51]=37;
t_210[52]=29;
t_210[53]=21;
t_210[54]=13;
t_210[55]=5;
t_210[56]=63;
t_210[57]=55;
t_210[58]=47;
t_210[59]=39;
t_210[60]=31;
t_210[61]=23;
t_210[62]=15;
t_210[63]=7;



  int temp[64];
for(int i=0;i<64;i++)
{
 temp[t_210[i]-1]=input[i];


}


for(int i=0;i<64;i++)
{
 input[i]=temp[i];
}

}




//..............................INITIAL PERMUATION.....................


void initial_permutation(int input[64])
{

int t_29[64];
t_29[0]=40;
t_29[1]=8;
t_29[2]=48;
t_29[3]=16;
t_29[4]=56;
t_29[5]=24;
t_29[6]=64;
t_29[7]=32;
t_29[8]=39;
t_29[9]=7;
t_29[10]=47;
t_29[11]=15;
t_29[12]=55;
t_29[13]=23;
t_29[14]=63;
t_29[15]=31;
t_29[16]=38;
t_29[17]=6;
t_29[18]=46;
t_29[19]=14;
t_29[20]=54;
t_29[21]=22;
t_29[22]=62;
t_29[23]=30;
t_29[24]=37;
t_29[25]=5;
t_29[26]=45;
t_29[27]=13;
t_29[28]=53;
t_29[29]=21;
t_29[30]=61;
t_29[31]=29;
t_29[32]=36;
t_29[33]=4;
t_29[34]=44;
t_29[35]=12;
t_29[36]=52;
t_29[37]=20;
t_29[38]=60;
t_29[39]=28;
t_29[40]=35;
t_29[41]=3;
t_29[42]=43;
t_29[43]=11;
t_29[44]=51;
t_29[45]=19;
t_29[46]=59;
t_29[47]=27;
t_29[48]=34;
t_29[49]=2;
t_29[50]=42;
t_29[51]=10;
t_29[52]=50;
t_29[53]=18;
t_29[54]=58;
t_29[55]=26;
t_29[56]=33;
t_29[57]=1;
t_29[58]=41;
t_29[59]=9;
t_29[60]=49;
t_29[61]=17;
t_29[62]=57;
t_29[63]=25;




  int temp[64];
for(int i=0;i<64;i++)
{
 temp[t_29[i]-1]=input[i];


}


for(int i=0;i<64;i++)
{
 input[i]=temp[i];
}

}


//.............................EXPANSION OF RIGHT HALF....................


void expand_right(int right1[32],int right2[48])
{
int t_25[48];

t_25[0]=31;
t_25[1]=0;
t_25[2]=1;
t_25[3]=2 ;
t_25[4]=3 ;
t_25[5]=4 ;
t_25[6]=3 ;
t_25[7]=4 ;
t_25[8]=5 ;
t_25[9]=6;
t_25[10]=7 ;
t_25[11]=8 ;
t_25[12]=7 ;
t_25[13]=8 ;
t_25[14]=9 ;
t_25[15]=10;
t_25[16]=11;
t_25[17]=12;
t_25[18]=11;
t_25[19]=12;
t_25[20]=13;
t_25[21]=14;
t_25[22]=15;
t_25[23]=16;
t_25[24]=15;
t_25[25]=16;
t_25[26]=17;
t_25[27]=18;
t_25[28]=19;
t_25[29]=20;
t_25[30]=19;
t_25[31]=20;
t_25[32]=21;
t_25[33]=22;
t_25[34]=23;
t_25[35]=24;
t_25[36]=23;
t_25[37]=24;
t_25[38]=25;
t_25[39]=26;
t_25[40]=27;
t_25[41]=28;
t_25[42]=27;
t_25[43]=28;
t_25[44]=29;
t_25[45]=30;
t_25[46]=31;
t_25[47]=0;


 for(int i=0;i<48;i++)
 {
  right2[i]=right1[t_25[i]];
 }














}






//..........................SHORTENING OF A KEY TO 56 Bits.....................

void shorten_key(int key1[64],int key2[56])
{

 int x=7;
 for(int i=0,k=0;i<64;i++)
 {
   if(i==x)
   {
   x=x+8;
   }
  else
  {
   key2[k]=key1[i];
   k++;

  }

 }

}






//..........................SHORTENING OF A KEY TO 48 Bits.....................

void shorten_key1(int key2[56],int key3[48])
{


int t_26[56];
t_26[0]=5;
t_26[1]=24;
t_26[2]=7;
t_26[3]=16;
t_26[4]=6;
t_26[5]=10;
t_26[6]=20;
t_26[7]=18;
t_26[8]=-1;
t_26[9]=12;
t_26[10]=3;
t_26[11]=15;
t_26[12]=23;
t_26[13]=1;
t_26[14]=9;
t_26[15]=19;
t_26[16]=2;
t_26[17]=-1;
t_26[18]=14;
t_26[19]=22;
t_26[20]=11;
t_26[21]=-1;
t_26[22]=13;
t_26[23]=4;
t_26[24]=-1;
t_26[25]=17;
t_26[26]=21;
t_26[27]=8;
t_26[28]=47;
t_26[29]=31;
t_26[30]=27;
t_26[31]=48;
t_26[32]=35;
t_26[33]=41;
t_26[34]=-1;
t_26[35]=46;
t_26[36]=28;
t_26[37]=-1;
t_26[38]=39;
t_26[39]=32;
t_26[40]=25;
t_26[41]=44;
t_26[42]=-1;
t_26[43]=37;
t_26[44]=34;
t_26[45]=43;
t_26[46]=29;
t_26[47]=36;
t_26[48]=38;
t_26[49]=45;
t_26[50]=33;
t_26[51]=26;
t_26[52]=42;
t_26[53]=-1;
t_26[54]=30;
t_26[55]=40;


 for(int i=0;i<56;i++)
 {
  if(t_26[i]==-1)
  continue;

  key3[t_26[i]-1]=key2[i];

 }



}










//..............................PERMUTE KEY.............................
void permute_key(int key2[56],int n)
{

int i,temp1[28],temp2[28];


for(i=0;i<28;i++)
{
 temp1[i]=key2[i];
}
for(int k=0;k<28;k++,i++)
{
 temp2[k]=key2[i];
}
/*
cout<<"\n\nBEFORE ROTATION :\n ";
cout<<"First 28 Bit Half of the Key:\n";

for( i=0;i<28;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<temp1[i];
  }
cout<<"\n\nSecond 28 Bit Half of the Key :\n";
for( i=0;i<28;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<temp2[i];
  }
*/

int t_25[16];
t_25[0]=1;
t_25[1]=1;
t_25[2]=2;
t_25[3]=2;
t_25[4]=2;
t_25[5]=2;
t_25[6]=2;
t_25[7]=2;
t_25[8]=1;
t_25[9]=2;
t_25[10]=2;
t_25[11]=2;
t_25[12]=2;
t_25[13]=2;
t_25[14]=2;
t_25[15]=1;


int x=t_25[n];

   if(x==1)
   {

     temp1[27]=key2[0];
     for(i=0;i<27;i++)
     temp1[i]=key2[i+1];


     temp2[27]=key2[28];
     for(i=0;i<27;i++)
     temp2[i]=key2[i+29];





   }
   if(x==2)
   {



     temp1[27]=key2[1];
     temp1[26]=key2[0];
     for(i=0;i<26;i++)
     temp1[i]=key2[i+2];


     temp2[27]=key2[29];
     temp2[26]=key2[28];
     for(i=0;i<26;i++)
     temp2[i]=key2[i+30];



   }
/*
cout<<"\n\nAFTER ROTATION :";

cout<<"\nFirst 28 bit Half of the Key:\n";

for( i=0;i<28;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<temp1[i];
  }
  getch();

cout<<"\n\nSecond 28 bit Half of the Key:\n";
for( i=0;i<28;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<temp2[i];
  }

getch();
 */
  for(i=0;i<28;i++)
  {
   key2[i]=temp1[i];

  }
   for(int k=0;k<28;k++,i++)
   {
    key2[i]=temp2[k];
   }
}



//....................................................................
//..........................DES ALGORITHM.............................
//....................................................................






int main()
{
system("cls");
int input[64]={0,1,1,0  ,0,0,0,0,  1,1,1,1  ,1,0,1,0,  0,1,1,1,  0,1,1,1,  1,1,1,0,  1,0,0,1,  0,1,1,0,  1,0,1,1,  1,1,0,1,  0,1,0,1,  0,1,1,1,  1,0,0,0  ,0,0,0,0,   1,1,1,1};
int key1[64]={1,1,1,0  ,0,1,0,0,  1,0,1,0  ,1,0,1,1,  0,0,1,0,  1,0,0,1,  1,0,0,1,  0,0,0,1,  1,0,1,0,  1,1,0,1,  0,1,0,1,  1,0,1,0,  1,0,0,0,  0,0,0,0  ,0,0,0,1,   0,0,0,1};
int key2[56];
int key3[48];
int right1[32];
int right2[48];
int right3[32];
int left[32];
int k,i;




cout<<"64 bit Input : \n";

for( i=0;i<64;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<input[i];
  }
  getch();


cout<<"\n\n64 bit Key : \n";

for( i=0;i<64;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<key1[i];
  }
//system("pause");


//........................INITIAL PERMUTATION...........................



cout<<"\n\n64 bit input after INITIAL PERMUTATION :\n";
initial_permutation(input);
for(  i=0;i<64;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<input[i];
  }


//system("pause");


//.....................SHORTENING OF A KEY TO 56 bits...................


shorten_key(key1,key2);

cout<<"\n\n56 bit KEY  :\n";
for(  i=0;i<56;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<key2[i];
  }

//system("pause");
//........................................................................
//.............................SINGLE CYCLE...............................
//........................................................................



//.........................PERMUTE KEY....................................


permute_key(key2,2);

cout<<"\n\n56 bit KEY after CIRCULAR ROTATION :\n";
for(  i=0;i<56;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<key2[i];
  }

//system("pause");



//......................SHORTEN KEY to 48 Bits................................

cout<<"\n\nShortened 48 bit Key :\n";
shorten_key1(key2,key3);
for(  i=0;i<48;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<key3[i];
  }

//system("pause");

//....................DIVISION into Right and Left Halves.....................


for( i=0;i<32;i++)
{

 left[i]=input[i];
}

for(k=0;k<32;k++,i++)
right1[k]=input[i];


cout<<"\n\nLEFT HALF :\n";
for( i=0;i<32;i++)
  {
   if(i%4==0)
    cout<<" ";

  cout<<left[i];
  }

//system("pause");

cout<<"\n\nRIGHT HALF :\n";
for( i=0;i<32;i++)
  {
   if(i%4==0)
    cout<<" ";

  cout<<right1[i];
  }
//system("pause");


 //..........................EXPANDED RIGHT HALF.................


expand_right(right1,right2);

cout<<"\n\nExpanded Right Half :\n";

for( i=0;i<48;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<right2[i];
  }

//system("pause");



//.............................XOR with KEY...............................
for(i=0;i<48;i++)
{

right2[i]=Xor(right2[i],key3[i]);

}
cout<<"\n\n48 bit RIGHT HALF AFTER XOR :\n";
for( i=0;i<48;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<right2[i];
  }

//system("pause");

//............................GOING TO S-BOXES.....................................

s_box(right2,right3);

cout<<"\n\n32 bit RIGHT HALF AFTER S-Boxes :\n";
for( i=0;i<32;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<right3[i];
  }

//system("pause");



//............................GOING TO P-BOXES.....................................

p_box(right3);

cout<<"\n\n32 bit RIGHT HALF AFTER P-Boxes :\n";
for( i=0;i<32;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<right3[i];
  }

//system("pause");


//.............................XOR with LEFT...............................
for(i=0;i<32;i++)
{

right3[i]=Xor(right3[i],left[i]);

}

cout<<"\n\nNEW 32 bit RIGHT HALF AFTER XOR :\n";
for( i=0;i<32;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<right3[i];
  }
//system("pause");


//........................ASSIGNING NEW LEFT AND RIGHT HALVES...............

for(i=0;i<32;i++)
{
left[i]=right1[i];
}


cout<<"\n\nNEW 32 bit LEFT HALF :\n";
for( i=0;i<32;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<left[i];
  }

//system("pause");

//........................................................................
//.....................RESULT AFTER 1 CYCLE.........................

for(i=0;i<32;i++)
{

input[i]=left[i];
}

for(k=0;k<32;k++,i++)
{

input[i]=right3[k];
}


cout<<"\n\nRESULT AFTER 1 CYCLE:\n";
for( i=0;i<64;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<input[i];
  }

//system("pause");


//........................END OF A CYCLE......................................
//........................FINAL PERMUTATION.................................


cout<<"\n\n64 bit input after FINAL PERMUTATION :\n";
final_permutation(input);
for( i=0;i<64;i++)
  {
    if(i%4==0)
    cout<<" ";

  cout<<input[i];
  }

system("pause");





return 0;
}
